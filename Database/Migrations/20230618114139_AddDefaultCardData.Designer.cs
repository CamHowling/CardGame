// <auto-generated />
using System.Collections.Generic;
using CardGame.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CardGame.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230618114139_AddDefaultCardData")]
    partial class AddDefaultCardData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CardGame.Domain.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("card_Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("signature");

                    b.Property<int>("Value")
                        .HasColumnType("integer")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("card");
                });

            modelBuilder.Entity("CardGame.Domain.Models.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("deck_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DiscardPile")
                        .HasColumnType("integer")
                        .HasColumnName("discard_pile");

                    b.Property<int>("DrawPile")
                        .HasColumnType("integer")
                        .HasColumnName("draw_pile");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.HasKey("Id");

                    b.ToTable("deck");
                });

            modelBuilder.Entity("CardGame.Domain.Models.Pile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pile_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<string>>("Cards")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("cards");

                    b.Property<bool>("IsDiscardPile")
                        .HasColumnType("boolean")
                        .HasColumnName("is_discard_pile");

                    b.Property<bool>("IsDrawPile")
                        .HasColumnType("boolean")
                        .HasColumnName("is_draw_pile");

                    b.HasKey("Id");

                    b.ToTable("pile");
                });
#pragma warning restore 612, 618
        }
    }
}
